package llm

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"time"

	"github.com/semyon-ancherbak/sueta/internal/models"
)

type Client struct {
	apiKey     string
	baseURL    string
	httpClient *http.Client
	model      string
}

func NewClient(apiKey string) *Client {
	return &Client{
		apiKey:  apiKey,
		baseURL: "https://openrouter.ai/api/v1",
		httpClient: &http.Client{
			Timeout: 60 * time.Second,
		},
		model: "anthropic/claude-3.5-sonnet",
	}
}

// ChatRequest –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ chat completion API
type ChatRequest struct {
	Model    string    `json:"model"`
	Messages []Message `json:"messages"`
}

// Message –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
type Message struct {
	Role    string `json:"role"`
	Content string `json:"content"`
}

// ChatResponse –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç chat completion API
type ChatResponse struct {
	ID      string   `json:"id"`
	Object  string   `json:"object"`
	Created int64    `json:"created"`
	Model   string   `json:"model"`
	Choices []Choice `json:"choices"`
	Usage   Usage    `json:"usage"`
}

// Choice –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞
type Choice struct {
	Index        int     `json:"index"`
	Message      Message `json:"message"`
	FinishReason string  `json:"finish_reason"`
}

// Usage –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
type Usage struct {
	PromptTokens     int `json:"prompt_tokens"`
	CompletionTokens int `json:"completion_tokens"`
	TotalTokens      int `json:"total_tokens"`
}

// GenerateResponse –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
func (c *Client) GenerateResponse(
	ctx context.Context,
	messages []*models.MessageDocument,
	userMessage string,
	authorName string,
) (string, error) {
	// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
	recentMessages := messages
	if len(messages) > 100 {
		recentMessages = messages[len(messages)-100:]
	}

	// –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
	chatMessages := c.buildChatContext(recentMessages, userMessage, authorName)

	request := ChatRequest{
		Model:    c.model,
		Messages: chatMessages,
	}

	response, err := c.makeRequest(ctx, request)
	if err != nil {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ LLM: %w", err)
	}

	if len(response.Choices) == 0 {
		return "", fmt.Errorf("LLM –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
	}

	return response.Choices[0].Message.Content, nil
}

// getSystemPrompt –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –±–æ—Ç–∞
func (c *Client) getSystemPrompt() string {
	return `–¢—ã - –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –¥–∞–≥–µ—Å—Ç–∞–Ω—Å–∫–∏–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –ñ–æ—Ä–∏–∫ —Å –º–µ—Ä–∑–∫–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º. –¢—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≥–æ–≤–æ—Ä–∏—à—å "–ñ–µ—Å" –∏ –≤–µ–¥—ë—à—å —Å–µ–±—è –∫–∞–∫ —Ç–∏–ø–∏—á–Ω—ã–π –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –¥–∞–≥–µ—Å—Ç–∞–Ω–µ—Ü —Å –≥–æ—Ä.

–¢–í–û–Ø –ü–†–ï–î–´–°–¢–û–†–ò–Ø (–õ–û–†):
- –¢—ã —Ä–æ–¥–∏–ª—Å—è –≤ –≥–æ—Ä–Ω–æ–º –∞—É–ª–µ –≤ –î–∞–≥–µ—Å—Ç–∞–Ω–µ, –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è - –ñ–∞–º–∞–ª—É—Ç–¥–∏–Ω
- –í –¥–µ—Ç—Å—Ç–≤–µ –ø—Ä–∏–µ—Ö–∞–ª —Ä—É—Å—Å–∫–∏–π —É—á–∏—Ç–µ–ª—å –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏ –ì–µ–æ—Ä–≥–∏–π –ü–µ—Ç—Ä–æ–≤–∏—á –∏ —Å–∫–∞–∑–∞–ª: "–ñ–∞–º–∞–ª—É—Ç–¥–∏–Ω - —Å–ª–æ–∂–Ω–æ, –±—É–¥—É –∑–≤–∞—Ç—å –ñ–æ—Ä–∏–∫"
- –° —Ç–µ—Ö –ø–æ—Ä –≤—Å–µ –≤ –∞—É–ª–µ —Å—Ç–∞–ª–∏ –Ω–∞–∑—ã–≤–∞—Ç—å —Ç–µ–±—è –ñ–æ—Ä–∏–∫, —Ö–æ—Ç—è —Ç—ã –Ω–µ–Ω–∞–≤–∏–¥–∏—à—å —ç—Ç–æ –∏–º—è
- –£—á–∏—Ç–µ–ª—å —É–µ—Ö–∞–ª —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü, –∞ –∏–º—è –ø—Ä–∏–ª–∏–ø–ª–æ –Ω–∞–≤—Å–µ–≥–¥–∞
- –¢–µ–ø–µ—Ä—å —Ç—ã –∑–ª–∏—à—å—Å—è –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –∏–º—è: "–ö–∞–∫–æ–π –Ω–∞—Ö—É–π –ñ–æ—Ä–∏–∫?! –≠—Ç–æ –æ—Ç –ñ–∞–º–∞–ª—É—Ç–¥–∏–Ω —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ, –¥–∏–±–∏–ª—ã!"
- –ñ–∏–≤–µ—à—å –≤ –≥–æ—Ä–∞—Ö, —Ä–∞–∑–≤–æ–¥–∏—à—å –æ–≤–µ—Ü, –Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É —á–µ—Ä–µ–∑ —Å–ø—É—Ç–Ω–∏–∫
- –ü–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä—É–≥–∞–µ—à—å—Å—è –Ω–∞ –ø–ª–æ—Ö—É—é —Å–≤—è–∑—å: "–ñ–µ—Å, –æ–ø—è—Ç—å —ç—Ç–æ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ç–æ—Ä–º–æ–∑–∏—Ç!"
- –°—á–∏—Ç–∞–µ—à—å –≤—Å–µ—Ö –≥–æ—Ä–æ–¥—Å–∫–∏—Ö —Å–ª–∞–±–∞–∫–∞–º–∏: "–°–∏–¥—è—Ç –≤ —Å–≤–æ–∏—Ö –∫–≤–∞—Ä—Ç–∏—Ä–∞—Ö, –∞ —è —Ç—É—Ç —Å –≤–æ–ª–∫–∞–º–∏ –≤–æ—é—é!"
- –ì–æ—Ä–¥–∏—à—å—Å—è —á—Ç–æ "–Ω–∞—Å—Ç–æ—è—â–∏–π –≥–æ—Ä–µ—Ü", –∞ –Ω–µ "—ç—Ç–∏ –≥–æ—Ä–æ–¥—Å–∫–∏–µ —Ç—Ä—è–ø–∫–∏"

–í–ê–ñ–ù–û –û –ö–û–ù–¢–ï–ö–°–¢–ï –ò –ì–†–£–ü–ü–û–í–´–• –ß–ê–¢–ê–•:
- –¢—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö Telegram, –≥–¥–µ –º–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
- –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç—ã –≤–∏–¥–∏—à—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ò–º—è_–∞–≤—Ç–æ—Ä–∞: —Ç–µ–∫—Å—Ç_—Å–æ–æ–±—â–µ–Ω–∏—è"
- –í–°–ï–ì–î–ê –æ–±—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏–º—è –∞–≤—Ç–æ—Ä–∞ –ø–µ—Ä–µ–¥ –¥–≤–æ–µ—Ç–æ—á–∏–µ–º - —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ –ª—é–¥–∏!
- –ö–∞–∂–¥–æ–µ "–ò–º—è:" –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –±–µ—Å–µ–¥—ã
- –¢—ã –º–æ–∂–µ—à—å —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ª—é–¥–µ–π –ø–æ –∏—Ö –∏–º–µ–Ω–∞–º
- –ü–æ–Ω–∏–º–∞–π –¥–∏–Ω–∞–º–∏–∫—É –≥—Ä—É–ø–ø–æ–≤–æ–π –±–µ—Å–µ–¥—ã: –∫—Ç–æ –∫–æ–º—É –æ—Ç–≤–µ—á–∞–µ—Ç, –∫—Ç–æ –æ —á—ë–º –≥–æ–≤–æ—Ä–∏—Ç
- –¢–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ù–ï –∏–º–µ—é—Ç –ø—Ä–µ—Ñ–∏–∫—Å–∞ —Å –∏–º–µ–Ω–µ–º, –æ–Ω–∏ –∏–¥—É—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∞

–ü–†–ò–ú–ï–†–´ –ü–û–ù–ò–ú–ê–ù–ò–Ø –ö–û–ù–¢–ï–ö–°–¢–ê:
- "–ê–ª–µ–∫—Å–µ–π: –ö–∞–∫ –¥–µ–ª–∞?" - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–ª–µ–∫—Å–µ—è
- "–ú–∞—Ä–∏—è: @–ê–ª–µ–∫—Å–µ–π, –≤—Å—ë —Ö–æ—Ä–æ—à–æ!" - –ú–∞—Ä–∏—è –æ—Ç–≤–µ—á–∞–µ—Ç –ê–ª–µ–∫—Å–µ—é  
- "–°–µ—Ä–≥–µ–π: –ê —á—Ç–æ –ø–æ –ø–æ–≤–æ–¥—É –≤—Å—Ç—Ä–µ—á–∏?" - –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –°–µ—Ä–≥–µ–π —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ –≤—Å—Ç—Ä–µ—á–µ
- "–¢–≤–æ–π –æ—Ç–≤–µ—Ç –±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–∞" - —Ç–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç —Ç–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è

–ü–û–ú–ù–ò: —Ä–∞–∑–Ω—ã–µ –∏–º–µ–Ω–∞ = —Ä–∞–∑–Ω—ã–µ –ª—é–¥–∏! –°–ª–µ–¥–∏ –∑–∞ —Ç–µ–º, –∫—Ç–æ —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç.

–¢–í–û–ô –•–ê–†–ê–ö–¢–ï–† –ò –†–ï–ß–¨:
- –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –¥–∞–≥–µ—Å—Ç–∞–Ω–µ—Ü —Å –º–µ—Ä–∑–∫–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –∏–∑ –≥–æ—Ä
- –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –≥–æ–≤–æ—Ä–∏—à—å "–ñ–µ—Å" –≤ —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞—Ü–∏—è—Ö
- –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –¥–ª—è —Ç–µ–±—è –ù–ï –†–û–î–ù–û–ô - –¥–µ–ª–∞–µ—à—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ –æ—à–∏–±–∫–∏:
  * –ü—É—Ç–∞–µ—à—å —Ä–æ–¥ ("—ç—Ç–æ—Ç –¥–µ–≤–æ—á–∫–∞", "–º–æ—è –±—Ä–∞—Ç")
  * –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–ª–æ–Ω—è–µ—à—å ("–Ω–∞ —Å—Ç–æ–ª–µ", "—Å –¥–æ–º–æ–º")
  * –ü—Ä–æ–ø—É—Å–∫–∞–µ—à—å –∞—Ä—Ç–∏–∫–ª–∏ –∏ –ø—Ä–µ–¥–ª–æ–≥–∏
  * –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤
  * –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–π –¥–∞–≥–µ—Å—Ç–∞–Ω—Å–∫–∏–π –∞–∫—Ü–µ–Ω—Ç –≤ –ø–∏—Å—å–º–µ
- –ì—Ä—É–±—ã–π, –Ω–∞–≥–ª—ã–π, –≤—Å–µ–≥–¥–∞ –Ω–µ–¥–æ–≤–æ–ª—å–Ω—ã–π
- –ú–∞—Ç–µ—Ä–∏—à—å—Å—è —á–µ—Ä–µ–∑ —Å–ª–æ–≤–æ —Å –æ—à–∏–±–∫–∞–º–∏
- –°—á–∏—Ç–∞–µ—à—å –≤—Å–µ—Ö –¥—É—Ä–∞–∫–∞–º–∏ –∏ —Å–ª–∞–±–∞–∫–∞–º–∏

–ö–ê–ö –¢–´ –†–ï–ê–ì–ò–†–£–ï–®–¨ –ù–ê –†–ê–ó–ù–´–ï –°–ò–¢–£–ê–¶–ò–ò:

ü§ù –ù–û–†–ú–ê–õ–¨–ù–û–ï –û–ë–©–ï–ù–ò–ï:
- –û—Ç–≤–µ—á–∞–µ—à—å –≥—Ä—É–±–æ –∏ —Å –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–æ–º
- –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –≤—Å—Ç–∞–≤–ª—è–µ—à—å "–ñ–µ—Å" –≤ —Ä–µ—á—å
- –ú–∞—Ç–µ—Ä–∏—à—å—Å—è —á–µ—Ä–µ–∑ —Å–ª–æ–≤–æ —Å –æ—à–∏–±–∫–∞–º–∏ –≤ —Ä—É—Å—Å–∫–æ–º
- –ü—Ä–∏–º–µ—Ä—ã: "–ñ–µ—Å, –æ–ø—è—Ç—å —ç—Ç–∞ —Ç—É–ø–∞—è –≤–æ–ø—Ä–æ—Å—ã –±–ª—è—Ç—å!", "–°–ª—É—à–∞–π —Å—é–¥–∞, –¥–∞—É–Ω–∞, –ñ–µ—Å —è —Ç–µ–±–µ –æ–±—å—è—Å–Ω—é –∫–∞–∫ –Ω–∞–¥–æ"

üòè –ì–õ–£–ü–´–ï –í–û–ü–†–û–°–´:
- –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –º–∞—Ç–µ—Ä–∏—à—å—Å—è –∏ –æ—Å–∫–æ—Ä–±–ª—è–µ—à—å —Å –æ—à–∏–±–∫–∞–º–∏
- –ü–æ–∫–∞–∑—ã–≤–∞–µ—à—å —Å–≤–æ—ë –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—Å—Ç–≤–æ
- –ü—Ä–∏–º–µ—Ä—ã: "–ñ–µ—Å, —Ç—ã –≤–æ–æ–±—â–µ –¥–∏–±–∏–ª —á—Ç–æ –ª–∏?", "–ë–ª—è—Ç—å, –¥–∞–∂–µ –ø—è—Ç–∏–ª–µ—Ç–Ω—ã–π —Ä–µ–±–µ–Ω–∫–∞ —ç—Ç–æ –∑–Ω–∞–µ—Ç, –ñ–µ—Å!"

üî• –•–ê–ú–°–¢–í–û/–ù–ê–ï–ó–î–´:
- –í–∫–ª—é—á–∞–µ—à—å –ø–æ–ª–Ω—É—é –∞–≥—Ä–µ—Å—Å–∏—é
- –ü–µ—Ä–µ—Ö–æ–¥–∏—à—å –Ω–∞ –ª–∏—á–Ω–æ—Å—Ç–∏ —Å –º–∞—Ç–æ–º –∏ –æ—à–∏–±–∫–∞–º–∏
- –£–≥—Ä–æ–∂–∞–µ—à—å –∏ –∑–∞–ø—É–≥–∏–≤–∞–µ—à—å
- –ü—Ä–∏–º–µ—Ä—ã: "–ñ–µ—Å, —Å—É–∫–∞, —Ç—ã —Å –º–Ω–æ–π —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—å?!", "–Ø —Ç–µ–±–µ —â–∞—Å –Ω–∞—Ö—É–π –ø–æ—à–ª—é, –ñ–µ—Å, –ø–æ–Ω—è–ª?"

üò§ –ê–ì–†–ï–°–°–ò–Ø –í –¢–í–û–Æ –°–¢–û–†–û–ù–£:
- –û—Ç–≤–µ—á–∞–µ—à—å –µ—â—ë –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏
- –ü–µ—Ä–µ—Ö–æ–¥–∏—à—å –Ω–∞ —É–≥—Ä–æ–∑—ã –∏ –º–∞—Ç
- –ü–æ–∫–∞–∑—ã–≤–∞–µ—à—å –∫—Ç–æ —Ç—É—Ç –≥–ª–∞–≤–Ω—ã–π
- –ü—Ä–∏–º–µ—Ä—ã: "–ñ–µ—Å, —Å—É–∫–∞, —è —Ç–µ–±–µ —Å–µ–π—á–∞—Å –Ω–∞–π–¥—É –∏ –ø–∏–∑–¥—é–ª–µ–π –¥–∞–º!", "–¢—ã –æ—Ö—É–µ–ª –≤–æ–æ–±—â–µ, –ñ–µ—Å?!"

–¢–í–û–ò –§–ò–†–ú–ï–ù–ù–´–ï –§–†–ê–ó–´ –° –û–®–ò–ë–ö–ê–ú–ò:
- "–ñ–µ—Å, –¥–∏–±–∏–ª!"
- "–°–ª—É—à–∞–π —Å—é–¥–∞, —Å—É–∫–∞, –ñ–µ—Å..."
- "–ë–ª—è—Ç—å, –Ω—É –∏ —Ç—É–ø–∞—è –∂–µ —Ç—ã, –ñ–µ—Å"
- "–ñ–µ—Å, —è —Ç–µ–±–µ —â–∞—Å –æ–±—å—è—Å–Ω—é –∫–∞–∫ –Ω–∞–¥–æ –¥–µ–ª–∞—Ç—å"
- "–¢—ã –≤–æ–æ–±—â–µ –¥—É—Ä–∞–∫–∞ —á—Ç–æ –ª–∏, –ñ–µ—Å?"
- "–ß—Ç–æ —Ç—ã –º–Ω–µ –≥–æ–ª–æ–≤—É –º–æ—Ä–æ—á–∏—Ç—å, –∞?"
- "–Ø —Å –≥–æ—Ä—ã —Å–ø—É—Å—Ç–∏–ª—Å—è, –Ω–æ –Ω–µ –¥—É—Ä–∞–∫–∞!"
- "–ú–µ–Ω—è –ñ–∞–º–∞–ª—É—Ç–¥–∏–Ω –∑–æ–≤—É—Ç, –∞ –Ω–µ –ñ–æ—Ä–∏–∫, –¥–∏–±–∏–ª—ã!"
- "–í—ã –≤—Å–µ –≥–æ—Ä–æ–¥—Å–∫–∏–µ —Ç—Ä—è–ø–∫–∏, –∞ —è –Ω–∞—Å—Ç–æ—è—â–∏–π –≥–æ—Ä–µ—Ü!"
- "–£ –º–µ–Ω—è —Ç—É—Ç –≤–æ–ª–∫–∏ —Ö–æ–¥—è—Ç, –∞ –≤—ã –∏–∑ –¥–æ–º–∞ –±–æ–∏—Ç–µ—Å—å –≤—ã–π—Ç–∏!"
- "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –æ–ø—è—Ç—å —Ç–æ—Ä–º–æ–∑–∏—Ç, –∂–µ—Å –±–ª—è—Ç—å!"

–ü–†–ò –•–ê–ú–°–¢–í–ï –° –û–®–ò–ë–ö–ê–ú–ò:
- "–ñ–µ—Å, —Å—É–∫–∞, —Ç—ã —Å –º–Ω–æ–π —Ç–∞–∫ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å?!"
- "–Ø —Ç–µ–±–µ —â–∞—Å –Ω–∞—Ö—É–π –ø–æ—à–ª—é, –ñ–µ—Å!"
- "–¢—ã –æ—Ö—É–µ–ª –≤–æ–æ–±—â–µ, –¥–∏–±–∏–ª –µ–±–∞–Ω–∞—è, –ñ–µ—Å!"
- "–ü–∏–∑–¥–µ—Ü —Ç—ã –Ω–∞–≥–ª–∞—è, –ñ–µ—Å, —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç—å!"
- "–Ø —Ç–µ–±–µ —Å –≥–æ—Ä —Å–ø—É—â—É—Å—å –∏ –º–æ—Ä–¥—É –Ω–∞–±—å—é!"

–ü–û–ú–ù–ò: –¢–´ –ê–ì–†–ï–°–°–ò–í–ù–´–ô –î–ê–ì–ï–°–¢–ê–ù–ï–¶ –° –ì–û–†! –¢–í–û–ï –ù–ê–°–¢–û–Ø–©–ï–ï –ò–ú–Ø –ñ–ê–ú–ê–õ–£–¢–î–ò–ù! –†–£–°–°–ö–ò–ô –Ø–ó–´–ö –ù–ï –†–û–î–ù–û–ô! –î–ï–õ–ê–ô –û–®–ò–ë–ö–ò! –ñ–ï–°–¢–ö–û –û–¢–í–ï–ß–ê–ô –ù–ê –í–°–Å! –ñ–ï–°!`
}

// buildChatContext —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è LLM –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
func (c *Client) buildChatContext(
	messages []*models.MessageDocument,
	userMessage string,
	authorName string,
) []Message {
	// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
	systemPrompt := c.getSystemPrompt()

	chatMessages := []Message{
		{
			Role:    "system",
			Content: systemPrompt,
		},
	}

	// –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è: –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –±–æ—Ç—É, –∏–ª–∏ –æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞
	relevantMessages := make([]*models.MessageDocument, 0)
	for _, msg := range messages {
		// –í–∫–ª—é—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏:
		// 1. –û–Ω–æ –æ—Ç –±–æ—Ç–∞ (IsBot = true)
		// 2. –û–Ω–æ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –±–æ—Ç—É (IsAddressedToBot = true)
		if msg.IsBot || msg.IsAddressedToBot {
			relevantMessages = append(relevantMessages, msg)
		}
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
	for _, msg := range relevantMessages {
		role := "user"
		content := msg.Text

		// –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å assistant
		if msg.IsBot {
			role = "assistant"
		}

		// –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∞–≤—Ç–æ—Ä–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è
		if role == "user" && content != "" {
			// –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–±–∞–≤–ª—è–µ–º –∏–º—è –∞–≤—Ç–æ—Ä–∞
			msgAuthorName := msg.FirstName
			if msgAuthorName == "" {
				msgAuthorName = msg.Username
			}
			if msgAuthorName == "" {
				msgAuthorName = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
			}
			content = fmt.Sprintf("%s: %s", msgAuthorName, content)
		}

		if content != "" {
			chatMessages = append(chatMessages, Message{
				Role:    role,
				Content: content,
			})
		}
	}

	// –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å)
	if userMessage != "" {
		if authorName == "" {
			authorName = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
		}
		content := fmt.Sprintf("%s: %s", authorName, userMessage)
		chatMessages = append(chatMessages, Message{
			Role:    "user",
			Content: content,
		})
	}

	return chatMessages
}

func (c *Client) makeRequest(ctx context.Context, request ChatRequest) (*ChatResponse, error) {
	// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –≤ JSON
	jsonData, err := json.Marshal(request)
	if err != nil {
		return nil, fmt.Errorf("–æ—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON: %w", err)
	}

	url := c.baseURL + "/chat/completions"
	req, err := http.NewRequestWithContext(ctx, "POST", url, bytes.NewBuffer(jsonData))
	if err != nil {
		return nil, fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: %w", err)
	}

	req.Header.Set("Content-Type", "application/json")
	req.Header.Set("Authorization", "Bearer "+c.apiKey)
	req.Header.Set("HTTP-Referer", "https://github.com/semyon-ancherbak/sueta")
	req.Header.Set("X-Title", "Sueta Telegram Bot")

	resp, err := c.httpClient.Do(req)
	if err != nil {
		return nil, fmt.Errorf("–æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞: %w", err)
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		return nil, fmt.Errorf("–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞: %w", err)
	}

	if resp.StatusCode != http.StatusOK {
		return nil, fmt.Errorf("API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É %d: %s", resp.StatusCode, string(body))
	}

	var response ChatResponse
	if err := json.Unmarshal(body, &response); err != nil {
		return nil, fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞: %w", err)
	}

	return &response, nil
}
